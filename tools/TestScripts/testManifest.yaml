- name: "First Frame Empty"
  category: "base"
  comment: "Test the first frame of the server is cleared to default clear color"
  shortName: "firstFrame"
  scinthDef: ""
  captureTimes: [ 1 ]
- name: "ScinOsc Bullseye"
  category: "VOsc"
  comment: "ScinOsc frequency as a function of distance from center."
  shortName: "scinOsc"
  scinthDef: "{ BWOut.fg(ScinOsc.fg(Length.fg(NormPos.fg))); }"
  captureTimes: [ 1, 1, 1, 1, 1 ]
- name: "VSaw Checker"
  category: "VOsc"
  comment: "VSaw two color checker pattern."
  shortName: "gingham"
  scinthDef: "{
    var pos = NormPos.fg;
    RGBOut.fg(VSaw.fg(1.0, VX.fg(pos)), VSaw.fg(1.5, VY.fg(pos)), VSaw.fg(VX.fg(NormPos.fg)));
  }"
  captureTimes: [ 1, 1 ]
- name: "Param Colors"
  category: "params"
  comment: "Test default values of parameters and a simple change"
  shortName: "paramColors"
  scinthDef: "{ |r = 0.5, g = 0.1, b = 0.9|
    RGBOut.fg(r, g, b);
}"
  captureTimes: [ 1, 1, 1 ]
  parameters:
    - "none"
    - b: 0.1
    - r: 0.8
      g: 0.3
- name: "Param Parabula"
  category: "params"
  comment: "Test parameters on a more complex ScinthDef"
  shortName: "paramParab"
  scinthDef: "{ |scale=2.0, xmod=0.5, ymod=0.5|
    var pos = NormPos.fg() * scale;
    var sawA = VSaw.fg(0.7, (VX.fg(pos) % xmod) * VY.fg(pos));
    var sawB = VSaw.fg(0.9, VX.fg(pos) * (VY.fg(pos) % ymod));
    BWOut.fg(sawA * sawB); }"
  captureTimes: [ 1, 1, 1 ]
  parameters:
    - "none"
    - "none"
    - scale: 3.0
      xmod: 1.0
      ymod: 0.7
- name: "Constant Image"
  category: "images"
  comment: "Test simple image render with constant image"
  shortName: "constImage"
  scinthDef: "{
    var size = TextureSize.fg(1);
    var aspect = VX.fg(size) / VY.fg(size);
    var pos = TexPos.fg;
    pos = Vec2.fg((VX.fg(pos) - 0.125) / aspect, VY.fg(pos));
    Sampler.fg(1, pos); }"
  images:
    - file: "molly.png"
      number: 1
  captureTimes: [ 1 ]
- name: "Parameterized Image"
  category: "images"
  comment: "Test simple image render with parameterized image"
  shortName: "paramImage"
  scinthDef: "{ |i|
    var size = TextureSize.fg(i);
    var aspect = VX.fg(size) / VY.fg(size);
    var pos = TexPos.fg;
    pos = Vec2.fg((VX.fg(pos) - 0.125) / aspect, VY.fg(pos));
    Sampler.fg(i, pos); }"
  images:
    - file: "storm.png"
      number: 1
    - file: "molly.png"
      number: 2
  captureTimes: [ 1, 1, 1, 1 ]
  parameters:
    - "none"
    - i: 1
    - i: 2
    - i: 123
- name: "Sampler with white border"
  category: "images"
  comment: "Test sampler border mode clamp with a white border"
  shortName: "whiteBorder"
  scinthDef: "{ Sampler.fg(1, TexPos.fg * 3.0).clampBorderColor_('white'); }"
  images:
    - file: "molly.png"
      number: 1
  captureTimes: [ 1 ]
- name: "Sampler with opaque black border"
  category: "images"
  comment: "Test sampler with border mode clamp with an opaque black border"
  shortName: "blackBorder"
  scinthDef: "{ Sampler.fg(1, TexPos.fg * 3.0).clampBorderColor_('black'); }"
  images:
    - file: "molly.png"
      number: 1
  captureTimes: [ 1 ]
- name: "Sampler with clamp to edge border"
  category: "images"
  comment: "Test sampler with clamp to edge border mode"
  shortName: "edgeBorder"
  scinthDef: "{ Sampler.fg(1, TexPos.fg * 3.0).addressMode('clampToEdge'); }"
  images:
    - file: "molly.png"
      number: 1
  captureTimes: [ 1 ]
- name: "Sampler with repeat border"
  category: "images"
  comment: "Test sampler with repeat border mode"
  shortName: "repeatBorder"
  scinthDef: "{ Sampler.fg(1, TexPos.fg * 3.0).addressMode('repeat'); }"
  images:
    - file: "molly.png"
      number: 1
  captureTimes: [ 1 ]
- name: "Sampler with mirrored repeat border"
  category: "images"
  comment: "Test sampler with repeat border mode"
  shortName: "mirrorBorder"
  scinthDef: "{ Sampler.fg(1, TexPos.fg * 3.0).addressMode('mirroredRepeat'); }"
  images:
    - file: "molly.png"
      number: 1
  captureTimes: [ 1 ]
- name: "Sampler with uniform buffer, constant, and parameterized images"
  category: "images"
  comment: "Test providing all forms of parameters to an Scinth"
  shortName: "complexImage"
  scinthDef: "{ |i = 2|
    var pos = TexPos.fg;
    var m = Sampler.fg(1, Vec2.fg(VSaw.fg(freq: 0.5, phase: VX.fg(pos)), VSaw.fg(freq: (0.75 / 2.0), phase: VY.fg(pos))));
    var s = Sampler.fg(i, Vec2.fg(VSaw.fg(freq: 2.0, phase: 1.0 - VX.fg(pos)), VSaw.fg(freq: 1.5, phase: 1.0 - VY.fg(pos))) * 2.0);
    s + m; }"
  images:
    - file: "molly.png"
      number: 1
    - file: "storm.png"
      number: 2
  captureTimes: [ 1, 1, 1, 1 ]
  parameters:
    - "none"
    - i: 1
    - i: 2
    - i: 123
