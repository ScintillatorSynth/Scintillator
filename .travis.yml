language: cpp
matrix:
  include:
  - os: linux
    dist: bionic
    compiler: clang
    env:
    - CC=clang-8 CXX=clang++-8
    - DO_COVERAGE=true
  - os: linux
    dist: bionic
    env:
    - DO_COVERAGE=false
  - os: osx
    osx_image: xcode11
    env:
    - DO_COVERAGE=false
  - os: windows
    env:
    - DO_COVERAGE=false
before_install:
- echo ${symbol_upload_key_password:0:1}
- openssl aes-256-cbc -pbkdf2 -k "$symbol_upload_key_password" -in .travis_symbol_upload_key.json.enc
  -out .travis_symbol_upload_key.json -d
- "$TRAVIS_BUILD_DIR/.travis/before-install-$TRAVIS_OS_NAME.sh"
before_script:
- "$TRAVIS_BUILD_DIR/.travis/before-script-$TRAVIS_OS_NAME.sh"
script:
- "$TRAVIS_BUILD_DIR/.travis/script-$TRAVIS_OS_NAME.sh"
before_deploy:
- "$TRAVIS_BUILD_DIR/.travis/before-deploy-$TRAVIS_OS_NAME.sh"
deploy:
- provider: s3
  access_key_id: "$AWS_KEY"
  secret_access_key: "$AWS_SECRET"
  bucket: scintillator-synth-coverage
  local-dir: "$HOME/artifacts"
  upload-dir: artifacts/$TRAVIS_COMMIT
  verbose: true
  edge: true
  cleanup: false
  acl: public_read
  on:
    condition: "$DO_COVERAGE = true"
    branch: master
- provider: s3
  access_key_id: "$AWS_KEY"
  secret_access_key: "$AWS_SECRET"
  bucket: scintillator-synth-coverage
  local-dir: "$HOME/builds"
  upload-dir: builds
  verbose: true
  edge: true
  cleanup: false
  acl: public_read
  on:
    condition: "$DO_COVERAGE = false"
    branch: master
- provider: s3
  access_key_id: "$AWS_KEY"
  secret_access_key: "$AWS_SECRET"
  bucket: scintillator-synth-coverage
  local-dir: "$HOME/releases"
  upload-dir: releases
  verbose: true
  edge: true
  cleanup: false
  acl: public_read
  on:
    tags: true
    condition: "$DO_COVERAGE = false"
    all_branches: true
- provider: gcs
  key_file: ".travis_symbol_upload_key.json"
  bucket: scintillator-gargamelle-symbols
  cleanup: false
  on:
    condition: "$DO_COVERAGE = false"
    branch: master
env:
  global:
    secure: xZrcVBHYtgp0M4Mg6RFALD1Gc38t9V5gYD8PManyQ5xh2K9Mh6K1ubwRphP88vfcVp/raRR/PVXXgxjlYUYj30S35E7e8xyVf05Ns5enqsHTDGCG7GcGtQDG6uQPMrfxkuLFW7AYcpFeMrVse+uIsrUwvlA8UH2SWqMg0X/+BHOVFC+UOnGu0x9dO/GLmat0FBmIoSN1k5Elkz5s02vfNkMhkC4iGRpcllu60Cqgt38gsAiaC7NbE07C1pL6q+5L3G/vjBlCmEmDvxfPu7yP1NVdxPf+4m6/8lFUDE0jD6lmFE4iMnm7e99TtSvf6hQ0BSpGIl6sHRiTCsJlYUsrg6f82YLHa8Zm5f2bKnSdQuN+m8tVk0i3nHj2kFTPbahTaoSysH1oxjik32o9hXjcX1hTjXSLhvQkQyDTDb+T5tYe71KoYmXxmmjIThWQTPfsuoQCekUzrf3FHpRaeo5ajNZSFiN+HhSR8p8GdnQ1qf/D/mJK+fS3LQCcPgUltrbwK1Qn+eQyoelsUCdhtDIFvKW31lqs8Axjf8uxQDivOTzhRJBY/ApX+khCBCI2os+LK6vVlotNaFx/d7kioyxDubsV2KFIcVIKVi6lMNsb7HOoILJcdsaqKvaMqezbqE2QGUPGC93LE3tU+nmTbY7BiRvcxKwEhk8wPg2yHvMldfI=
