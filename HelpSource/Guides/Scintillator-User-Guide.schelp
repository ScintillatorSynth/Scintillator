title:: Scintillator User Guide
summary:: User manual for the Scintillator visual synthesizer.
categories:: Quarks>Scintillator>Guides
related:: Classes/ScinthDef, Classes/ScinServer

In keeping with the high-energy physics themes of SuperCollider, a emphasis::scintillator:: is any material that produces light when struck by radition. Scintillator is intended to be an accompanying visual synthesizer designed to be intuitive to users already familiar with SuperCollider idioms. Distributed as a Quark plus a synthesizer binary, Scintillator follows the client/server archiecture established by SuperCollider, accepts link::Classes/ScinthDef::s in a similar manner to SuperCollider link::Classes/SynthDef::s, provides facilities to invoke and control link::Classes/Scinth:: instances similar to link::Classes/Synth::, and so on. For a detailed list of classes with analogous SuperCollider classes see link::Guides/Scintillator-Parallel-Classes::.

section::Project Status (March 2020)

Scintillator is an open-source (GPLv3) project developed and maintained by Luke Nihlen. It is in early pre-alpha stage and the purpose of these first few releases is to gather feedback and identify any outstanding major bugs that might need to be resolved before considering a beta or even production-quality release. Central features are under active development, and the classes and their methods may change from point release to point release without notice. As such Scintillator is ready for review but building a larger composition or planning a performance on it may not be advisable.

All that said, it is my sincere hope you find Scintillator useful and interesting, and I'm keen to hear your feedback. Drop by the link::https://github.com/ScintillatorSynth/Scintillator##GitHub project page::, if you encounter any bugs or have any feature requests please feel free to file them there, or drop me an email at code::scintillator.synth@gmail.com::.

section::Installation

subsection::Quark Installation

Scintillator is distributed in two pieces and both are required in order for it to run. The first piece contains the SuperCollider classes and support, and is distributed as a Quark. Installation should be as simple as executing the following code:

code::
(
Quarks.install("Scintillator");
)
::

Or you can use the Quarks GUI to pick out Scintillator and install it. See link::Guides/UsingQuarks:: for more information. The second half of the Scintillator distribution consists of the code::scinsynth:: binary, which is the C++-based visual synthesis server. Official releases of the Scintillator Quark will always have an associated server binary, which can be obtained from the GitHub releases page (link TBD).

subsection::Server Binary Installation on MacOS

Just like the audio synth, Scintillator includes a standalone video synth binary called code::scinsynth::. The binary will need to be installed in the Scintillator Quark directory in the code::/bin:: subdirectory. The point of this initial release is to test if the MacOS redestributable binary is working and can run on different Macs than it was developed on. The Linux destributable binary is a work in progress and will be generally available for the official alpha release.

To get the MacOS binary head to the link::https://github.com/ScintillatorSynth/Scintillator/releases##GitHub Releases Page:: and download the MacOS release binary for version 0.0.1. This is a zip file. Find the Scintillator quark directory (link::Classes/ScinServerOptions:: has the Quark path if you want to look there), and extract the zip file into the /bin subdirectory.

section::Quick Startup - TBD

This section can serve to validate your Scintillator installation, as well as to establish some of the basic concepts and get some pixels lighting up on the screen.
