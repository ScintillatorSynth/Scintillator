TITLE:: VSinOsc
summary:: Multidimensional sinusoidal video oscillator
categories:: Quarks>Scintillator>VGens>Video Oscillators
related:: Classes/SinOsc

DESCRIPTION::
VSinOsc, just like the audio UGen link::Classes/SinOsc:: UGen, is a sinusoidal oscillator. It can process inputs of one to four dimensions and produces an output in the same dimension. The arguments parallel the arguments used by link::Classes/SinOsc::, with the only difference being that the default code::mul:: and code::add:: argument values are modified to support producing a sin output range within code::[0, 1]:: instead of the audio range code::[-1, 1]::.

strong::Supported Rates: frame, shape, pixel::

CLASSMETHODS::

METHOD:: fr
METHOD:: sr
METHOD:: pr

Make a VSinOsc VGen at requested rate.

ARGUMENT:: freq
Oscillator frequency in cycles per second or Hz.

ARGUMENT:: phase
Oscillator phase in radians.

ARGUMENT:: mul
Multiplier to apply to oscillator output.

ARGUMENT:: add
Value to add to oscillator output after multiply.

strong::Dimensions::
table::
## strong::input:: || strong::output::
## 1, 1, 1, 1 || 1
## 2, 2, 2, 2 || 2
## 3, 3, 3, 3 || 3
## 4, 4, 4, 4 || 4
::

INSTANCEMETHODS::
private:: inputDimensions, outputDimensions

EXAMPLES::

code::
(
// This example demonstrates using the three-dimensional
// VSinOsc to produce separate red, green, and blue
// channel outputs. Note that all arguments have to be
// provided to the higher dimensional VSinOsc instances,
// because the defaults are only 1-dimensional, and
// Scintillator currently can't "autosplat" defaults to
// higher-dimensional arguments.
~k = ScinthDef.new(\k, { |dot = 0.5|
	var r = VLength.pr(VNormPos.pr);
	var rgb = VSinOsc.pr(VVec3.pr(r, 2.0 * r, 3.0 * r),
		VVec3.pr, VSplat3.pr(0.5), VSplat3.pr(0.5));
	VRGBOut.pr(VX.pr(rgb), VY.pr(rgb), VZ.pr(rgb));
}).add;
)

(
~t = Scinth.new(\k);
)
::

image::VSinOsc.png::
