# Simple arithmetic VGens
---    ##### Unary Operations
name: VNeg
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = -1.0f * @a;"
---
name: VAbs
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = abs(@a);"
---
name: VCeil
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = ceil(@a);"
---
name: VFloor
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = floor(@a);"
---
name: VFract
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = fract(@a);"
---
name: VSign
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = sign(@a);"
---
name: VSqrt
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = sqrt(@a);"
---
name: VExp
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = exp(@a);"
---
name: VLog
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = log(@a);"
---
name: VLog2
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = log2(@a);"
---
name: VSin
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = sin(@a);"
---
name: VCos
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = cos(@a);"
---
name: VTan
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = tan(@a);"
---
name: VASin
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = asin(@a);"
---
name: VACos
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = acos(@a);"
---
name: VATan
rates: [ frame, shape, pixel ]
inputs: [ a ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = atan(@a);"
---    #### Binary Operations
name: VAdd
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = @a + @b;"
---
name: VSub
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = @a - @b;"
---
name: VMul
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = @a * @b;"
---
name: VDiv
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = @a / @b;"
---
name: VMod
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = mod(@a, @b);"
---
name: VPow
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = pow(@a, @b);"
---
name: VMin
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = min(@a, @b);"
---
name: VMax
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = max(@a, @b);"
---
name: VATan2
rates: [ frame, shape, pixel ]
inputs: [ a, b ]
outputs: [ out ]
dimensions:
    - inputs: 1
      outputs: 1
    - inputs: 2
      outputs: 2
    - inputs: 3
      outputs: 3
    - inputs: 4
      outputs: 4
shader: "@out = atan(@a, @b);"
